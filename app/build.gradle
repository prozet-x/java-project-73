plugins {
	id 'java'
	id "org.liquibase.gradle" version "2.2.0"
	id 'org.springframework.boot' version '3.1.2-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'application'
	id 'checkstyle'
	id 'jacoco'
}

group = 'hexlet.code'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

application {
	mainClass = 'hexlet.code.Application'
}

jacocoTestReport {
	reports {
		xml.required = true
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

jar {
    manifest {
        attributes "Main-Class": "hexlet.code.Application"
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

dependencies {
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	compileOnly 'org.projectlombok:lombok'

	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.1.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	liquibaseRuntime(
			sourceSets.main.output,
			'org.liquibase:liquibase-core',
			'info.picocli:picocli:4.7.1',
			'org.liquibase.ext:liquibase-hibernate6:4.21.1',
			'org.springframework.boot:spring-boot-starter-data-jpa',
			'com.h2database:h2',
	)
}

tasks.named('test') {
	useJUnitPlatform()
}

diffChangelog{
	dependsOn compileJava
}

task stage(dependsOn: [clean, installDist])
installDist.mustRunAfter clean